{"ast":null,"code":"var _jsxFileName = \"/home/miguel/public_html/nlw/web/src/pages/CreatePoint/index.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { FiArrowLeft } from 'react-icons/fi';\nimport { Map, TileLayer, Marker } from 'react-leaflet';\nimport api from '../../services/api';\nimport './styles.css';\nimport logo from \"../../assets/logo.svg\";\n\nconst CreatePoint = () => {\n  const [items, setItems] = useState([]);\n  const [ufs, setUfs] = useState([]);\n  const [citys, setCitys] = useState([]);\n  const [initialPosition, setInitialPosition] = useState([0, 0]);\n  const [selectedUf, setSelectdUf] = useState('0');\n  const [selectedCity, setSelectdCity] = useState('0');\n  const [selectedPosition, setSelectedPosition] = useState([0, 0]);\n  useEffect(() => {\n    api.get('items').then(response => {\n      setItems(response.data);\n    });\n  }, []);\n  useEffect(() => {\n    api.get('https://servicodados.ibge.gov.br/api/v1/localidades/estados?orderBy=nome').then(response => {\n      const ufInitials = response.data.map(uf => uf.sigla);\n      setUfs(ufInitials);\n    });\n  }, []);\n  useEffect(() => {\n    if (selectedUf === '0') return;\n    api.get('https://servicodados.ibge.gov.br/api/v1/localidades/estados/' + selectedUf + '/municipios?orderBy=nome').then(response => {\n      const cityNames = response.data.map(city => city.nome);\n      setCitys(cityNames);\n    });\n  }, [selectedUf]);\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(position => {\n      const {\n        latitude,\n        longitude\n      } = position.coords;\n      setInitialPosition([latitude, longitude]);\n    });\n  }, [selectedUf]);\n\n  function handleSelectUf(event) {\n    setSelectdUf(event.target.value);\n  }\n\n  function handleSelectCity(event) {\n    setSelectdCity(event.target.value);\n  }\n\n  function handleMapClick(event) {\n    setSelectedPosition([event.latlng.lat, event.latlng.lng]);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"page-create-point\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: logo,\n    alt: \"Ecoleta\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FiArrowLeft, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 21\n    }\n  }), \"Voltar para home\")), /*#__PURE__*/React.createElement(\"form\", {\n    action: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  }, \"Cadastro do \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 33\n    }\n  }), \" ponto de coleta\"), /*#__PURE__*/React.createElement(\"fieldset\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"legend\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 25\n    }\n  }, \"Dados\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 25\n    }\n  }, \"Nome da entidade\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    id: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 29\n    }\n  }, \"E-mail\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    name: \"email\",\n    id: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"whatsapp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 29\n    }\n  }, \"Whatsapp\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"whatsapp\",\n    id: \"whatsapp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 29\n    }\n  })))), /*#__PURE__*/React.createElement(\"fieldset\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"legend\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 25\n    }\n  }, \"Endere\\xE7o\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 25\n    }\n  }, \"Selecione o endere\\xE7o no mapa\")), /*#__PURE__*/React.createElement(Map, {\n    center: [-29.7835624, -51.1034508],\n    zoom: 15,\n    onClick: handleMapClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TileLayer, {\n    attribution: \"&copy <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n    url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Marker, {\n    position: initialPosition,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Marker, {\n    position: selectedPosition,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"uf\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 29\n    }\n  }, \"Estado\"), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"uf\",\n    id: \"uf\",\n    value: selectedUf,\n    onChange: handleSelectUf,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 33\n    }\n  }, \"Selecione uma UF\"), ufs.map(uf => /*#__PURE__*/React.createElement(\"option\", {\n    key: uf,\n    value: uf,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 37\n    }\n  }, uf)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"city\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 29\n    }\n  }, \"Cidade\"), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"city\",\n    id: \"city\",\n    value: selectedCity,\n    onChange: handleSelectCity,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 33\n    }\n  }, \"Selecione uma cidade\"), citys.map(city => /*#__PURE__*/React.createElement(\"option\", {\n    key: city,\n    value: city,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 41\n    }\n  }, city)))))), /*#__PURE__*/React.createElement(\"fieldset\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"legend\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 25\n    }\n  }, \"\\xCDtens de coleta\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 25\n    }\n  }, \"Selecione um ou mais itens abaixo\")), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"items-grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 21\n    }\n  }, items.map(item => /*#__PURE__*/React.createElement(\"li\", {\n    key: item.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: item.image_url,\n    alt: item.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 37\n    }\n  }, item.title))))), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 17\n    }\n  }, \"Cadastrar ponto de coleta\")));\n};\n\nexport default CreatePoint;","map":{"version":3,"sources":["/home/miguel/public_html/nlw/web/src/pages/CreatePoint/index.tsx"],"names":["React","useEffect","useState","Link","FiArrowLeft","Map","TileLayer","Marker","api","CreatePoint","items","setItems","ufs","setUfs","citys","setCitys","initialPosition","setInitialPosition","selectedUf","setSelectdUf","selectedCity","setSelectdCity","selectedPosition","setSelectedPosition","get","then","response","data","ufInitials","map","uf","sigla","cityNames","city","nome","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","handleSelectUf","event","target","value","handleSelectCity","handleMapClick","latlng","lat","lng","logo","item","id","image_url","title"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, ChangeEvent } from 'react';\nimport { Link } from 'react-router-dom';\nimport { FiArrowLeft } from 'react-icons/fi';\nimport { Map, TileLayer, Marker } from 'react-leaflet';\nimport { LeafletMouseEvent } from 'leaflet';\nimport api from '../../services/api';\n\nimport './styles.css';\n\nimport logo from '../../assets/logo.svg'\nimport { identifier } from '@babel/types';\nimport { number } from 'prop-types';\n\ninterface Item {\n    id: number,\n    title: string,\n    image_url: string\n}\n\ninterface Uf {\n    sigla: string\n}\n\ninterface City {\n    nome: string\n}\n\nconst CreatePoint = () => {\n    const [items, setItems] = useState<Item[]>([])\n    const [ufs, setUfs] = useState<string[]>([])\n    const [citys, setCitys] = useState<string[]>([])\n\n    const [initialPosition, setInitialPosition] = useState<[number, number]>([0,0])\n    const [selectedUf, setSelectdUf] = useState('0')\n    const [selectedCity, setSelectdCity] = useState('0')\n    const [selectedPosition, setSelectedPosition] = useState<[number, number]>([0,0])\n\n    useEffect(() => {\n        api.get('items').then(response => {\n            setItems(response.data)\n        })\n    }, []);\n\n    useEffect(() => {\n        api.get<Uf[]>('https://servicodados.ibge.gov.br/api/v1/localidades/estados?orderBy=nome').then(response => {\n            const ufInitials = response.data.map(uf => uf.sigla);\n\n            setUfs(ufInitials);\n        })\n    }, []);\n\n    useEffect(() => {\n        if(selectedUf === '0' )\n            return;\n\n        api.get<City[]>('https://servicodados.ibge.gov.br/api/v1/localidades/estados/'+selectedUf+'/municipios?orderBy=nome').then(response => {\n            const cityNames = response.data.map(city => city.nome);\n\n            setCitys(cityNames);\n        })\n    }, [selectedUf]);\n\n    useEffect(() => {\n        navigator.geolocation.getCurrentPosition(position =>{\n            const {latitude, longitude } = position.coords;\n            setInitialPosition([latitude, longitude]);\n        })\n    }, [selectedUf]);\n\n    function handleSelectUf(event: ChangeEvent<HTMLSelectElement>) {\n        setSelectdUf(event.target.value)\n    }\n\n    function handleSelectCity(event: ChangeEvent<HTMLSelectElement>) {\n        setSelectdCity(event.target.value)\n    }\n\n    function handleMapClick(event: LeafletMouseEvent) {\n        setSelectedPosition([\n            event.latlng.lat,\n            event.latlng.lng,\n        ])\n    }\n\n    return (\n        <div id=\"page-create-point\">\n            <header>\n                <img src={logo} alt=\"Ecoleta\" />\n\n                <Link to=\"/\">\n                    <FiArrowLeft />\n                    Voltar para home\n                </Link>\n            </header>\n\n            <form action=\"\">\n                <h1>Cadastro do <br /> ponto de coleta</h1>\n\n                <fieldset>\n                    <legend>\n                        <h2>Dados</h2>\n                    </legend>\n\n                    <div className=\"field\">\n                        <label htmlFor=\"name\">Nome da entidade</label>\n                        <input\n                            type=\"text\"\n                            name=\"name\"\n                            id=\"name\"\n                        />\n                    </div>\n\n                    <div className=\"field-group\">\n                        <div className=\"field\">\n                            <label htmlFor=\"email\">E-mail</label>\n                            <input\n                                type=\"email\"\n                                name=\"email\"\n                                id=\"email\"\n                            />\n                        </div>\n                        <div className=\"field\">\n                            <label htmlFor=\"whatsapp\">Whatsapp</label>\n                            <input\n                                type=\"text\"\n                                name=\"whatsapp\"\n                                id=\"whatsapp\"\n                            />\n                        </div>\n                    </div>\n                </fieldset>\n\n                <fieldset>\n                    <legend>\n                        <h2>Endereço</h2>\n                        <span>Selecione o endereço no mapa</span>\n                    </legend>\n\n                    <Map center={[-29.7835624, -51.1034508]} zoom={15} onClick={handleMapClick}>\n                        <TileLayer\n                            attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                        />\n                        <Marker position={initialPosition} />\n                        <Marker position={selectedPosition} />\n                    </Map>\n\n                    <div className=\"field-group\">\n                        <div className=\"field\">\n                            <label htmlFor=\"uf\">Estado</label>\n                            <select name=\"uf\" id=\"uf\" value={selectedUf} onChange={handleSelectUf}>\n                                <option value=\"0\">Selecione uma UF</option>\n                                {\n                                 ufs.map(uf => (\n                                    <option key={uf} value={uf}>{uf}</option>\n                                 ))   \n                                }\n                            </select>\n                        </div>\n                        <div className=\"field\">\n                            <label htmlFor=\"city\">Cidade</label>\n                            <select name=\"city\" id=\"city\" value={selectedCity} onChange={handleSelectCity}>\n                                <option value=\"0\">Selecione uma cidade</option>\n                                {\n                                    citys.map(city => (\n                                        <option key={city} value={city}>{city}</option>\n                                    ))\n                                }\n                            </select>\n                        </div>\n                    </div>\n                </fieldset>\n\n                <fieldset>\n                    <legend>\n                        <h2>Ítens de coleta</h2>\n                        <span>Selecione um ou mais itens abaixo</span>\n                    </legend>\n\n                    <ul className=\"items-grid\">\n                        {\n                            items.map(item => (\n                                <li key={item.id}>\n                                    <img src={item.image_url} alt={item.title} />\n                                    <span>{item.title}</span>\n                                </li>\n                            ))\n                        }\n                    </ul>\n                </fieldset>\n\n                <button type=\"submit\">\n                    Cadastrar ponto de coleta\n                </button>\n            </form>\n        </div>\n    )\n};\n\nexport default CreatePoint;"]},"metadata":{},"sourceType":"module"}